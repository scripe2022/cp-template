    vector<int> cutvertices() {
        vector<int> vis(n, 0), dfn(n), low(n), cut(n, 0);
        int clock = 0;
        function<void(int, int)> dfs = [&](int u, int p) {
            vis[u] = 1;
            low[u] = dfn[u] = ++clock;
            int child = 0;
            for (auto &edge: e[u]) {
                if (!vis[edge.v]) {
                    ++child;
                    dfs(edge.v, u);
                    cmin(low[u], low[edge.v]);
                    if (p != u && low[edge.v] >= dfn[u] && !cut[u]) cut[u] = 1;
                }
                else if (edge.v != p) cmin(low[u], dfn[edge.v]);
            }
            if (p == u && child >= 2 && !cut[u]) cut[u] = 1;
        };
        rep(i, 0, n) if (!vis[i]) dfs(i, i);
        return cut;
    }
