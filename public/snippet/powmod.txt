    constexpr int safe_mod(int x, int m) {
        x %= m;
        if (x < 0) x += m;
        return x;
    }
    struct barrett {
        uint _m, im;
        explicit barrett(uint m) : _m(m), im((uint)(-1) / m + 1) {}
        uint umod() const { return _m; }
        uint mul(unsigned int a, unsigned int b) const {
            uint z = a;
            z *= b;
            uint x = (uint)(((unsigned __int128)(z)*im) >> 64);
            uint y = x * _m;
            return (uint)(z - y + (z < y ? _m : 0));
        }
    };
    int pow_mod(int x, int n, int m = INF) {
        if (m == 1) return 0;
        barrett bt((uint)(m));
        uint r = 1, y = (uint)(safe_mod(x, m));
        while (n) {
            if (n & 1) r = bt.mul(r, y);
            y = bt.mul(y, y);
            n >>= 1;
        }
        return r;
    }
