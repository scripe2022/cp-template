    int spfa(int s, vector<int> &dis, vector<int> &pre) {
        dis.resize(n, INF);
        pre.resize(n, -1);
        vector<bool> inq(n, 0);
        vector<int> cnt(n, 0);
        queue<int> q;
        dis[s] = 0, q.push(s), inq[s] = 1;
        while (!q.empty()) {
            int u = q.front(); q.pop();
            inq[u] = 0;
            for (auto edge: e[u]) {
                int v = edge.v, w = edge.w;
                if (dis[u] != INF && dis[v] > dis[u] + w) {
                    pre[v] = u;
                    dis[v] = dis[u] + w;
                    if (!inq[v]) {
                        q.push(v), inq[v] = 1, ++cnt[v];
                        if (cnt[v] >= n) return v;
                    }
                }
            }
        }
        return -1;
    }
