    auto manacher(const string &input) {
        int n = input.length();
        vector<char> s(2*n + 3, '#');
        vector<int> r(2*n + 3);
        for (int i = 0; i < n; i++) s[2*i + 2] = input[i];
        s[0] = '$', s[2*n+2] = '@';
        int c = 0, maxr = 0;
        rep(i, 1, 2*n+2) {
            int mirror = 2*c - i;
            if (i < maxr) r[i] = min(r[mirror], maxr - i);
            while (s[i+r[i]+1] == s[i-r[i]-1]) ++r[i];
            if (i+r[i] > maxr) c = i, maxr = i+r[i];
        }
        auto range = [](int C, int R) -> pair<int, int> {
            return {(C-R)/2, (C+R)/2 - 1};
        };
        return make_pair(r, range);
    }
