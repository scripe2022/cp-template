    void dijkstra_ksp(int s, int K, vector<int> &dis, vector<int> &kth) {
        dis.resize(n, INF); dis[s] = 0; kth.clear();
        vector<int> vis(n, 0);
        priority_queue<pair<int, int>, vector<pair<int, int>>, greater<pair<int, int>>> pq; pq.push({0, s});
        while (!pq.empty()) {
            auto [d, u] = pq.top(); pq.pop();
            if (vis[u] >= K) continue;
            ++vis[u];
            if (u == n-1) kth.push_back(d);
            for (auto [v, w]: e[u]) {
                pq.push({d + w, v});
            }
        }
    }
