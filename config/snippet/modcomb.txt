    struct mod_comb {
        int p = 1e9 + 7;
        vector<int> fact, fact_inv;
        mod_comb(int N, int mp): p(mp) {
            fact.resize(N+1);
            fact_inv.resize(N+1);
            fact[0] = fact_inv[0] = 1;
            rep(i, 1, N+1) fact[i] = fact[i-1] * i % p;
            fact_inv[N] = mod_inv(fact[N], p);
            for (int i = N-1; i >= 0; --i) fact_inv[i] = fact_inv[i+1] * (i+1) % p;
        };
        int C(int n, int m) {
            if (m < 0 || m > n) return 0;
            return fact[n] * fact_inv[m] % p * fact_inv[n-m] % p;
        };
    };
